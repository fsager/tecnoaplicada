/*
 * PanelDominio.java
 *
 * Created on __DATE__, __TIME__
 */

package frontend.paneles;

import java.awt.Component;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import testerGeneral.business.ContextManager;
import testerGeneral.domain.Constantes;
import testerGeneral.domain.Dominio;
import testerGeneral.domain.Persona;

import testerGeneral.focus.MyOwnFocusTraversalPolicy;
import testerGeneral.service.DominioDefinition;

import testerGeneral.service.PersonaDefinition;
import testerGeneral.service.PersonaRestricionDefinition;
import testerGeneral.domain.PersonaRestricion;

import frontend.buttons.ButtonCancelarConTexto;
import frontend.buttons.ButtonEliminar;
import frontend.buttons.ButtonGuardar;
import frontend.buttons.ButtonModificar;
import frontend.buttons.ButtonNuevo;
import frontend.buttons.ButtonSalir;
import frontend.components.JOptionPaneTesterGral;
import frontend.tablemodel.TableModelDominio;
import frontend.utils.Util;
import frontend.ventanas.JInternalFrameTesterGral;

/**
 *
 * @author  __USER__
 */
public class PanelDominio extends javax.swing.JPanel {

	private static final Log log = LogFactory.getLog(PanelDominio.class);
	private DominioDefinition dominioService = (DominioDefinition) ContextManager
			.getBizObject("dominioService");

	/** Creates new form PanelDominio */
	public PanelDominio(Dominio dom, JInternalFrameTesterGral jif) {
		initComponents();
		this.dom = dom;
		this.jif = jif;

		jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null,
				Constantes.PANEL_DATOS_DOMINIO + dom.getDomClave(),
				javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,
				javax.swing.border.TitledBorder.DEFAULT_POSITION,
				new java.awt.Font("Segoe UI", 3, 12)));

		setTableModel(new ArrayList());
		Util.ocultarSinResultados(lbSinResultados, true);
		Util.mostrarError(lbError, null, true);

		Vector<Component> order = new Vector<Component>();
		order.add(tableDominios);
		order.add(txtCodigo);
		order.add(txtDescripcion);
		order.add(btnNuevo);
		order.add(btnModificar);
		order.add(btnEliminar);
		order.add(btnGuardar);
		order.add(btnCancelar);
		MyOwnFocusTraversalPolicy newPolicy = new MyOwnFocusTraversalPolicy(
				order);

		lbClave.setText(dom.getDomClave()+":");
		this.setFocusTraversalPolicy(newPolicy);
		habilitar(false);
		cargarDominios();
	}

	public void setTableModel(List lst) {
		TableModelDominio tableModel = new TableModelDominio();
		String colum[] = new String[1];
		colum[0] = new String(dom.getDomClave());
		tableModel.setColumnNames(colum);
		tableModel.setLst(lst);
		tableDominios.setModel(tableModel);
		tableDominios.getSelectionModel().addListSelectionListener(new SharedListSelectionHandler());
		tableDominios.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tableDominios.setAutoCreateRowSorter(false);

		if (lst.size() == 0)
			Util.ocultarSinResultados(lbSinResultados, false);
		else
			tableDominios.setAutoCreateRowSorter(true);

	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		tableDominios = new javax.swing.JTable();
		lbSinResultados = new javax.swing.JLabel();
		jPanel2 = new javax.swing.JPanel();
		lbClave = new javax.swing.JLabel();
		txtCodigo = new javax.swing.JTextField();
		jLabel2 = new javax.swing.JLabel();
		lbError = new javax.swing.JLabel();
		jScrollPane2 = new javax.swing.JScrollPane();
		txtDescripcion = new javax.swing.JTextArea();
		btnNuevo = new ButtonNuevo();
		btnModificar = new ButtonModificar();
		btnEliminar = new ButtonEliminar();
		btnGuardar = new ButtonGuardar();
		btnCancelar = new ButtonCancelarConTexto();
		btnSalir = new ButtonSalir();

		setFocusCycleRoot(true);

		jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null,
				Constantes.PANEL_RESULTADOS_BUSQUEDA,
				javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,
				javax.swing.border.TitledBorder.DEFAULT_POSITION,
				new java.awt.Font("Segoe UI", 3, 12)));
		jPanel1.setFocusable(false);

		tableDominios.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				tableDominiosMouseClicked(evt);
			}
		});
		jScrollPane1.setViewportView(tableDominios);

		lbSinResultados.setForeground(new java.awt.Color(204, 0, 0));
		lbSinResultados.setIcon(new ImageIcon(getClass().getResource(
				Constantes.IMG_ERROR)));
		lbSinResultados.setText(Constantes.ERROR_SIN_RESULTADOS);

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(
				jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout
				.setHorizontalGroup(jPanel1Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel1Layout
										.createSequentialGroup()
										.addGroup(
												jPanel1Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(
																javax.swing.GroupLayout.Alignment.TRAILING,
																jPanel1Layout
																		.createSequentialGroup()
																		.addGap(
																				12,
																				12,
																				12)
																		.addComponent(
																				lbSinResultados,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				329,
																				Short.MAX_VALUE))
														.addGroup(
																jPanel1Layout
																		.createSequentialGroup()
																		.addGap(
																				18,
																				18,
																				18)
																		.addComponent(
																				jScrollPane1,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				323,
																				javax.swing.GroupLayout.PREFERRED_SIZE)))
										.addContainerGap()));
		jPanel1Layout
				.setVerticalGroup(jPanel1Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								javax.swing.GroupLayout.Alignment.TRAILING,
								jPanel1Layout
										.createSequentialGroup()
										.addContainerGap()
										.addComponent(
												jScrollPane1,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												156,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)
										.addComponent(
												lbSinResultados,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												24,
												javax.swing.GroupLayout.PREFERRED_SIZE)));

		jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null,
				Constantes.PANEL_DATOS_USUARIO,
				javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,
				javax.swing.border.TitledBorder.DEFAULT_POSITION,
				new java.awt.Font("Segoe UI", 3, 12)));
		jPanel2.setFocusable(false);

		txtCodigo.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusLost(java.awt.event.FocusEvent evt) {
				txtCodigoFocusLost(evt);
			}
		});

		jLabel2.setText(Constantes.LB_DOM_DESCRIPCION);

		lbError.setBackground(new java.awt.Color(204, 0, 0));
		lbError.setForeground(new java.awt.Color(204, 0, 0));
		lbError.setIcon(new ImageIcon(getClass().getResource(
				Constantes.IMG_ERROR)));

		txtDescripcion.setColumns(20);
		txtDescripcion.setRows(5);
		jScrollPane2.setViewportView(txtDescripcion);

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(
				jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout
				.setHorizontalGroup(jPanel2Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel2Layout
										.createSequentialGroup()
										.addGap(25, 25, 25)
										.addGroup(
												jPanel2Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(lbClave)
														.addComponent(jLabel2))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												jPanel2Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING,
																false)
														.addComponent(
																jScrollPane2)
														.addComponent(
																txtCodigo,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																174,
																Short.MAX_VALUE))
										.addGap(32, 32, 32)).addComponent(
								lbError, javax.swing.GroupLayout.DEFAULT_SIZE,
								306, Short.MAX_VALUE));
		jPanel2Layout
				.setVerticalGroup(jPanel2Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel2Layout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												jPanel2Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(lbClave)
														.addComponent(
																txtCodigo,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												jPanel2Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(jLabel2)
														.addComponent(
																jScrollPane2,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																127,
																Short.MAX_VALUE))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												lbError,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												24,
												javax.swing.GroupLayout.PREFERRED_SIZE)));

		btnNuevo.setText("Nuevo");
		btnNuevo.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnNuevoActionPerformed(evt);
			}
		});

		btnModificar.setText("Modificar");
		btnModificar.setEnabled(false);
		btnModificar.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnModificarActionPerformed(evt);
			}
		});

		btnEliminar.setText("Eliminar");
		btnEliminar.setEnabled(false);
		btnEliminar.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnEliminarActionPerformed(evt);
			}
		});

		btnGuardar.setText("Guardar");
		btnGuardar.setEnabled(false);
		btnGuardar.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnGuardarActionPerformed(evt);
			}
		});

		btnCancelar.setText("Cancelar");
		btnCancelar.setEnabled(false);
		btnCancelar.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnCancelarActionPerformed(evt);
			}
		});

		btnSalir.setText("Salir");
		btnSalir.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnSalirActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout
				.setHorizontalGroup(layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								layout
										.createSequentialGroup()
										.addComponent(
												jPanel1,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												jPanel2,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGroup(
								javax.swing.GroupLayout.Alignment.TRAILING,
								layout
										.createSequentialGroup()
										.addContainerGap(163, Short.MAX_VALUE)
										.addComponent(
												btnNuevo,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												80,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												btnModificar,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												80,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												btnEliminar,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												80,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												btnGuardar,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												80,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												btnCancelar,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												80,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												btnSalir,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												80,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addContainerGap()));
		layout
				.setVerticalGroup(layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								javax.swing.GroupLayout.Alignment.TRAILING,
								layout
										.createSequentialGroup()
										.addGroup(
												layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(
																jPanel1,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE)
														.addComponent(
																jPanel2,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																btnNuevo,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																20,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																btnModificar,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																20,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																btnEliminar,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																20,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																btnGuardar,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																20,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																btnCancelar,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																20,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																btnSalir,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																20,
																javax.swing.GroupLayout.PREFERRED_SIZE))));

		((ButtonNuevo) btnNuevo).init();
		((ButtonModificar) btnModificar).init();
		((ButtonEliminar) btnEliminar).init();
		((ButtonGuardar) btnGuardar).init();
		((ButtonCancelarConTexto) btnCancelar).init();
		((ButtonSalir) btnSalir).init();
	}// </editor-fold>
	//GEN-END:initComponents

	private void txtCodigoFocusLost(java.awt.event.FocusEvent evt) {
		//txtCodigo.setText(txtCodigo.getText().toUpperCase());
	}

	private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {
		jif.setClosed(true);
	}

	private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {
		btnNuevo.setEnabled(true);
		btnCancelar.setEnabled(false);
		btnModificar.setEnabled(false);
		btnEliminar.setEnabled(false);
		btnGuardar.setEnabled(false);
		btnCancelar.setEnabled(false);
		afterButton();
		habilitar(false);
	}

	public void afterButton() {
		log.info("afterButton");

		inicializar();
		habilitar(true);
		Dominio domAux=new Dominio();
		domAux.setDomClave(dom.getDomClave());
		domAux.setDomTipo(dom.getDomTipo());		
		dom=domAux;
	}

	private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {
		log.info("btnGuardarActionPerformed");

		Util.mostrarError(lbError, null, true);
		if (validarDominio()) {
			boolean isUpdate = true;
			if (dom.getDomId() == null)
				isUpdate = false;

			dom.setDomValorMostrar(txtCodigo.getText());
			dom.setDomCodigo(txtCodigo.getText());
			dom.setDomDescripcion(txtDescripcion.getText());

			try {

				if (isUpdate) {
					dominioService.update(dom);

					testerGeneral.persistence.impl.Util.insertAudit(
							testerGeneral.persistence.impl.Util.ACTION_UPDATE,
							dom.getDomClave(), dom.getDomClave() + " - "
									+ dom.getDomValorMostrar());
				} else {
					dominioService.insert(dom);
				}

				btnNuevo.setEnabled(true);
				btnCancelar.setEnabled(false);
				btnModificar.setEnabled(false);
				btnEliminar.setEnabled(false);
				btnGuardar.setEnabled(false);
				btnCancelar.setEnabled(false);

				afterButton();
				cargarDominios();
				habilitar(false);
				JOptionPaneTesterGral.showInternalMessageDialog(this,Constantes.MENSAJE_GUARDADO,
						Constantes.MENSAJE_GUARDADO_TIT,
						JOptionPane.INFORMATION_MESSAGE);

			} catch (Exception e) {
				throw new RuntimeException(e);
			}
		}
	}

	public boolean validarDominio() {
		//Tener cuidado con los dominios cuando se los modifica o eliminar
		if (txtCodigo.getText() == null || txtCodigo.getText().equals("")) {
			Util.mostrarError(lbError, Constantes.ERROR_DOM_CLAVE+dom.getDomClave(), false);
			return false;
		}
		if(dom.getDomId()!=null)
		{
			//modifica entonces veo si alguien ya lo esta usando.
			if(!validarUsoDominios())
			{
				Util.mostrarError(lbError,dom.getDomClave()+Constantes.ERROR_DOM_CLAVE_EN_USO_MOD, false);
				return false;
			}

			
		}
		else
		{
			//valido si existe
			try {
				
			Dominio example=new Dominio();
			example.setDomTipo(dom.getDomTipo());
			example.setDomClave(dom.getDomClave());
			example.setDomCodigo(txtCodigo.getText());

			if(dominioService.getAll(example).size()>0)
			{
				Util.mostrarError(lbError,dom.getDomClave()+Constantes.ERROR_DOM_CLAVE_EXISTENTE, false);
				return false;
			}
			
			} catch (Exception e) {
				e.printStackTrace();
			}
		}

		return true;
	}

	
	public boolean validarUsoDominios()
	{
		PersonaRestricionDefinition personaRestricionService=(PersonaRestricionDefinition)ContextManager.getBizObject("personaRestricionService");
		PersonaDefinition personaService=(PersonaDefinition)ContextManager.getBizObject("personaService");
				
		try 
		{	
			PersonaRestricion example=new PersonaRestricion();
			example.setDomId(dom.getDomId());

			if(personaRestricionService.getAll(example).size()>0)
				return false;
			
			if(dom.getDomClave().equals(Constantes.DOMINIO_CLAVE_SEXO) && dom.getDomTipo().equals(Constantes.DOMINIO_TIPO_SEXO))
			{
				Persona per=new Persona();
				per.setPerSexo(dom.getDomCodigo());
				if(personaService.getAll(per).size()>0)
					return false;	
			}
			else if(dom.getDomClave().equals(Constantes.DOMINIO_CLAVE_TIPO_DOC) && dom.getDomTipo().equals(Constantes.DOMINIO_TIPO_TIPO_DOC))
			{
				Persona per=new Persona();
				per.setPerTipoDoc(dom.getDomCodigo());
				if(personaService.getAll(per).size()>0)
					return false;	
			}
			else if(dom.getDomClave().equals(Constantes.DOMINIO_CLAVE_ESTADO_CIVIL) && dom.getDomTipo().equals(Constantes.DOMINIO_TIPO_ESTADO_CIVIL))
			{
				Persona per=new Persona();
				per.setPerEstadoCivil(dom.getDomCodigo());
				if(personaService.getAll(per).size()>0)
					return false;	
			}
			else if(dom.getDomClave().equals(Constantes.DOMINIO_CLAVE_LOCALIDAD) && dom.getDomTipo().equals(Constantes.DOMINIO_TIPO_LOCALIDAD))
			{
				Persona per=new Persona();
				per.setPerLocalidad(dom.getDomCodigo());
				if(personaService.getAll(per).size()>0)
					return false;	
			}
			else if(dom.getDomClave().equals(Constantes.DOMINIO_CLAVE_GRUPO_SAN) && dom.getDomTipo().equals(Constantes.DOMINIO_TIPO_GRUPO_SAN))
			{
				Persona per=new Persona();
				per.setPerGrupoSanguineo(dom.getDomCodigo());
				if(personaService.getAll(per).size()>0)
					return false;	
			}
			
		} catch (Exception e) {
			throw new RuntimeException(e);
		}
			
		return true;
	}
	
	private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {
		try {
			log.info("btnEliminarActionPerformed");

			if (JOptionPaneTesterGral.showInternal(this,Constantes.MENSAJE_ELIMINAR,
					Constantes.MENSAJE_ELIMINADO_TIT,
					JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
				
				//valido si alguien la esta usando antes de eliminar
				if(!validarUsoDominios())
				{
					Util.mostrarError(lbError,dom.getDomClave()+Constantes.ERROR_DOM_CLAVE_EN_USO_DEL, false);
					return;
				}
				
				dominioService.delete(dom);

				btnNuevo.setEnabled(true);
				btnCancelar.setEnabled(false);
				btnModificar.setEnabled(false);
				btnEliminar.setEnabled(false);
				btnGuardar.setEnabled(false);
				btnCancelar.setEnabled(false);

				afterButton();
				JOptionPaneTesterGral.showInternalMessageDialog(this,Constantes.MENSAJE_ELIMINADO,
						Constantes.MENSAJE_ELIMINADO_TIT,
						JOptionPane.INFORMATION_MESSAGE);
				cargarDominios();
				habilitar(false);
			}

		} catch (Exception e) {
			throw new RuntimeException(e);
		}
	}

	private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {
		log.info("btnModificarActionPerformed");

		habilitar(true);

		btnNuevo.setEnabled(false);
		btnCancelar.setEnabled(true);
		btnModificar.setEnabled(false);
		btnEliminar.setEnabled(false);
		btnGuardar.setEnabled(true);
		btnCancelar.setEnabled(true);
	}

	private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {
		txtCodigo.requestFocus();
		btnNuevo.setEnabled(false);
		btnCancelar.setEnabled(true);
		btnGuardar.setEnabled(true);
		btnModificar.setEnabled(false);
		btnEliminar.setEnabled(false);

		afterButton();
	}

	private void tableDominiosMouseClicked(java.awt.event.MouseEvent evt) {
		seleccionarDominio();
	}

	class SharedListSelectionHandler implements ListSelectionListener {
		public void valueChanged(ListSelectionEvent e) {
			ListSelectionModel lsm = (ListSelectionModel) e.getSource();
			if (!lsm.isSelectionEmpty()) {
				seleccionarDominio();
			}
		}
	}

	public void seleccionarDominio() {

		log.info("seleccionarDominio");

		int selected = tableDominios.getSelectedRow();
		dom = ((TableModelDominio) tableDominios.getModel())
				.getValueAt(selected);

		inicializar();

		txtCodigo.setText(dom.getDomCodigo());
		txtDescripcion.setText(dom.getDomDescripcion());

		btnGuardar.setEnabled(false);
		btnCancelar.setEnabled(false);
		btnNuevo.setEnabled(true);
		btnEliminar.setEnabled(true);
		btnModificar.setEnabled(true);

		habilitar(false);
	}

	public void habilitar(boolean habilitar) {
		log.info("habilitar");

		txtCodigo.setEnabled(habilitar);
		txtDescripcion.setEnabled(habilitar);
	}

	public void inicializar() {
		log.info("inicializar");

		txtCodigo.setText("");
		txtDescripcion.setText("");

		Util.mostrarError(lbError, "", true);
	}

	public void cargarDominios() {
		log.info("cargarDominios");
		try {
			Util.ocultarSinResultados(lbSinResultados, true);
			Dominio dom = new Dominio();
			dom.setDomTipo(this.dom.getDomTipo());
			dom.setDomClave(this.dom.getDomClave());

			List<Dominio> dominios = dominioService.getAll(dom);
			setTableModel(dominios);
		} catch (Exception e) {
			throw new RuntimeException(e);
		}
	}

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JButton btnCancelar;
	private javax.swing.JButton btnEliminar;
	private javax.swing.JButton btnGuardar;
	private javax.swing.JButton btnModificar;
	private javax.swing.JButton btnNuevo;
	private javax.swing.JButton btnSalir;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JLabel lbClave;
	private javax.swing.JLabel lbError;
	private javax.swing.JLabel lbSinResultados;
	private javax.swing.JTable tableDominios;
	private javax.swing.JTextField txtCodigo;
	private javax.swing.JTextArea txtDescripcion;
	// End of variables declaration//GEN-END:variables
	protected Dominio dom = new Dominio();
	private JInternalFrameTesterGral jif;

}