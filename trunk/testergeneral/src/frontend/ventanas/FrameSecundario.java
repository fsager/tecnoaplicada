/*
 * FrameContenedor.java
 *
 * Created on __DATE__, __TIME__
 */

package frontend.ventanas;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.GraphicsConfiguration;
import java.awt.Rectangle;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

import javax.swing.JFrame;
import javax.swing.JLabel;

import testerGeneral.business.ContextManager;
import testerGeneral.domain.Constantes;
import testerGeneral.domain.Propiedad;
import testerGeneral.service.PropiedadDefinition;
import frontend.utils.Util;
import frontend.utils.VentanasUtilTesterGral;

public class FrameSecundario extends javax.swing.JFrame {
	private PropiedadDefinition propiedadService = (PropiedadDefinition) ContextManager
			.getBizObject("propiedadService");

	public FrameSecundario(GraphicsConfiguration gc) {
		super(gc);
		
		Util.setIcon(this, Constantes.IMG_ICON);
		this.setExtendedState(JFrame.MAXIMIZED_BOTH);

		initComponents();
		btnCancelar.setSize(150, 20);
		btnCancelar.setLocation(20,20);

		/*btnExaminarNuevamente.setSize(150, 20);
		btnExaminarNuevamente.setLocation(20,50);

		btnGuardar.setSize(150, 20);
		btnGuardar.setLocation(20,80);*/

		dp.setOpaque(false);
		dp.add(btnCancelar);
/*		dp.add(btnExaminarNuevamente);
		dp.add(btnGuardar);*/		

		this.setAlwaysOnTop(true);
		Rectangle bounds = gc.getBounds();
		this.setSize(bounds.width, bounds.height);
		Util.dpSecundario = dp;

		JLabel lb = new JLabel();
		Util.lbSecundario = lb;
		Propiedad prop = ContextManager
				.getPropertyObj("SISTEMA.IMAGEN.SECUNDARIA");
		VentanasUtilTesterGral.setFondo(this, dp, lb, prop);

		prop = ContextManager.getPropertyObj("SISTEMA.IMAGEN.PRIMARIA");

		this.getContentPane().setBackground(
				new Color(Integer.valueOf(prop.getPropValor())));

		setVisible(true);
		
	
	}

	public int filasImagen(int height) {
		int filas = 1;
		Dimension dim = this.getToolkit().getScreenSize();
		filas = (int) dim.getHeight() / height;
		return filas;
	}

	public int columnasImagen(int width) {
		int columnas = 1;
		Dimension dim = this.getToolkit().getScreenSize();
		columnas = (int) dim.getWidth() / width;

		return columnas;
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		dp = new javax.swing.JDesktopPane();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setResizable(false);
		setUndecorated(true);
		addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowDeiconified(java.awt.event.WindowEvent evt) {
				formWindowDeiconified(evt);
			}
		});

		dp.setBackground(new java.awt.Color(51, 51, 51));
		dp.setPreferredSize(null);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 524,
				Short.MAX_VALUE).addGroup(
				layout.createParallelGroup(
						javax.swing.GroupLayout.Alignment.LEADING).addGroup(
						layout.createSequentialGroup().addGap(0, 0, 0)
								.addComponent(dp,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										0, Short.MAX_VALUE).addGap(0, 0, 0))));
		layout.setVerticalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 313,
				Short.MAX_VALUE).addGroup(
				layout.createParallelGroup(
						javax.swing.GroupLayout.Alignment.LEADING).addGroup(
						layout.createSequentialGroup().addGap(0, 0, 0)
								.addComponent(dp,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										0, Short.MAX_VALUE).addGap(0, 0, 0))));

		pack();
	}// </editor-fold>
	//GEN-END:initComponents

	private void formWindowDeiconified(java.awt.event.WindowEvent evt) {
		this.setExtendedState(JFrame.MAXIMIZED_BOTH);
	}

	public javax.swing.JDesktopPane getDp() {
		return dp;
	}

	public void setDp(javax.swing.JDesktopPane dp) {
		this.dp = dp;
	}
	
	public javax.swing.JToggleButton getBtnCancelar() {
		return btnCancelar;
	}
	
	public void clearActioListener()
	{
		ActionListener actionListeners[]=btnCancelar.getActionListeners();
		for(ActionListener actionListener:actionListeners)
		{
			btnCancelar.removeActionListener(actionListener);
		}
	}
	
/*	public javax.swing.JToggleButton getBtnExaminarNuevamente() {
		return btnExaminarNuevamente;
	}
	
	public javax.swing.JToggleButton getBtnGuardar() {
		return btnGuardar;
	}*/

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JDesktopPane dp;
	// End of variables declaration//GEN-END:variables
	private javax.swing.JLabel lbFondo = new javax.swing.JLabel();
	private javax.swing.JToggleButton btnCancelar= new javax.swing.JToggleButton("Volver");
//	private javax.swing.JPanel botones=new javax.swing.JPanel();;
/*	private javax.swing.JToggleButton btnGuardar= new javax.swing.JToggleButton("Guardar Resultados");
	private javax.swing.JToggleButton btnExaminarNuevamente= new javax.swing.JToggleButton("Examinar Nuevamente");*/

}